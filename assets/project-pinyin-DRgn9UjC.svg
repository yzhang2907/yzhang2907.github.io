<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="188.39285mm"
   height="86.564285mm"
   viewBox="0 0 188.39285 86.564285"
   version="1.1"
   id="svg1"
   inkscape:version="1.3.2 (091e20e, 2023-11-25, custom)"
   sodipodi:docname="projectitem1.svg"
   inkscape:export-filename="project-wavestep.svg"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.75191827"
     inkscape:cx="347.77716"
     inkscape:cy="360.41151"
     inkscape:window-width="1920"
     inkscape:window-height="1018"
     inkscape:window-x="-6"
     inkscape:window-y="-6"
     inkscape:window-maximized="1"
     inkscape:current-layer="g37" />
  <defs
     id="defs1" />
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-14.551541,-15.208431)">
    <g
       id="g14"
       inkscape:label="wavestep"
       transform="translate(-19.797365,0.88035713)"
       style="display:none">
      <text
         xml:space="preserve"
         id="text10"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.23333px;font-family:'Courier New';-inkscape-font-specification:'Courier New';letter-spacing:0px;word-spacing:0px;white-space:pre;fill:#333333;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:4.04032;stroke-miterlimit:3.4;stroke-dasharray:none;stroke-opacity:1"
         transform="translate(0.87007736,-2.5881336)"><textPath
           xlink:href="#path13"
           startOffset="50%"
           id="textPath13"
           style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.23333px;font-family:'Cascadia Code';-inkscape-font-specification:'Cascadia Code';text-align:center;text-anchor:middle;fill:#333333;fill-opacity:1;stroke:none;stroke-width:4.04032;stroke-dasharray:none">Third-Person Scrolling Shooter • Finally Finish Something Jam 2020</textPath></text>
      <path
         id="path13"
         style="display:none;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.22303;stroke-miterlimit:3.4;stroke-opacity:0.226087"
         d="M 127.78286,-220.24202 A 189.16345,209.06855 0 0 0 -60.967873,-10.71828 189.16345,209.06855 0 0 0 128.60747,197.89408 189.16345,209.06855 0 0 0 317.35816,-11.629658 189.16345,209.06855 0 0 0 127.78286,-220.24202 Z" />
    </g>
    <g
       id="g31"
       style="display:inline"
       inkscape:label="pinyin-2-export"
       inkscape:export-filename=".\g31.svg"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96">
      <path
         id="rect7"
         style="fill:none;stroke:#262626;stroke-linecap:square;stroke-miterlimit:3.4;stroke-dashoffset:2.64"
         d="M 15.05154,15.708431 H 202.44439 V 101.27272 H 15.05154 Z" />
      <g
         id="text11"
         style="font-size:200px;font-family:Helvetica;-inkscape-font-specification:Helvetica;letter-spacing:6px;word-spacing:2px;white-space:pre;fill:#ffffff;stroke:#333333;stroke-width:3.77953;stroke-linecap:square;stroke-miterlimit:3.4;stroke-dashoffset:2.64"
         transform="matrix(0.26458333,0,0,0.26458333,-44.261813,-55.513486)"
         aria-label="张懿之">
        <path
           style="font-family:UnifontExMono;-inkscape-font-specification:UnifontExMono"
           d="m 456.80469,495.97852 v -12.5 h -12.5 v 12.5 z m -62.5,-12.5 v -12.5 h -12.5 v 12.5 h -12.5 q 0,0 0,-75 h 12.5 v 12.5 h 12.5 q 0,0 0,25 h 12.5 v 12.5 h 12.5 v 12.5 h 12.5 v 12.5 h 12.5 v -12.5 h -12.5 v -12.5 h -12.5 v -12.5 h -12.5 q 0,0 0,-25 h -12.5 v -12.5 h 62.5 v -12.5 h -87.5 v -87.5 h -12.5 v 87.5 h -25 v 12.5 h 25 q 0,0 0,100 h 12.5 v -12.5 h 12.5 v -12.5 z m -100,12.5 v 12.5 h 12.5 v -12.5 z m 0,0 v -12.5 h -12.5 v 12.5 z m 12.5,0 h 12.5 v -12.5 h -12.5 z m 12.5,-12.5 h 12.5 v -62.5 h -37.5 v -37.5 h 37.5 v -62.5 h -62.5 v 12.5 h 50 v 37.5 h -37.5 v 62.5 h 37.5 z m 75,-112.5 h -12.5 v 12.5 h 12.5 z m 0,0 h 12.5 v -12.5 h -12.5 z m 12.5,-12.5 h 12.5 v -12.5 h -12.5 z m 12.5,-12.5 h 12.5 q 0,0 0,-25 h -12.5 z"
           id="path35" />
        <path
           style="font-family:UnifontExMono;-inkscape-font-specification:UnifontExMono;letter-spacing:12px"
           d="m 550.30469,483.47852 v -12.5 h -12.5 v -12.5 h 12.5 v -37.5 h -50 q 0,0 0,50 h 12.5 v 12.5 h -25 v 12.5 h 25 v -12.5 z m 125,-62.5 v -12.5 h -12.5 v 12.5 z m -75,-37.5 v -12.5 h -12.5 v 12.5 h -12.5 v 12.5 h -12.5 v 12.5 h 12.5 v -12.5 h 12.5 v -12.5 z m -50,-25 v -12.5 h -12.5 v -12.5 h 25 v 12.5 h 25 v 12.5 h 12.5 v -12.5 h -12.5 v -12.5 h -25 v -12.5 h -25 v -12.5 h -12.5 v 12.5 h -37.5 v 12.5 h 37.5 v 12.5 h -25 v 12.5 z m 12.5,112.5 q 0,0 0,25 h 12.5 q 0,0 0,-25 z m 50,12.5 v 12.5 h 37.5 q 0,0 0,-25 h -12.5 v 12.5 z m 0,0 v -37.5 h -12.5 v 37.5 z m 50,-12.5 q 0,0 0,25 h 12.5 q 0,0 0,-25 z m -150,0 v -12.5 h 12.5 v 12.5 z m 62.5,0 h 12.5 q 0,0 0,-25 h -12.5 z m 75,0 h 12.5 v -12.5 h -12.5 z m -137.5,-25 v -12.5 h 25 v 12.5 z m 112.5,-12.5 q 0,0 0,25 h 12.5 q 0,0 0,-25 z m 0,0 v -12.5 h -12.5 v 12.5 z m -25,-25 h -12.5 v 12.5 h 12.5 z m 0,0 h 12.5 v -12.5 h -12.5 z m 62.5,0 v -12.5 h -12.5 v 12.5 z m -162.5,-12.5 v 12.5 h 50 v -12.5 z m 0,0 v -12.5 h 50 v 12.5 h 12.5 q 0,0 0,-25 h -75 q 0,0 0,25 z m 112.5,0 h 12.5 q 0,0 0,-25 h -12.5 z m 37.5,0 q 0,0 0,-25 h -12.5 q 0,0 0,25 z m -25,-25 h 12.5 q 0,0 0,-25 h 25 v 12.5 h -12.5 v 12.5 h 12.5 v -12.5 h 12.5 q 0,0 0,-25 h -50 q 0,0 0,-25 h -12.5 q 0,0 0,25 h -12.5 v 12.5 h 25 z m 262,125 v -12.5 h -75 v 12.5 z m -25,-137.5 v -12.5 h -62.5 v -37.5 h -12.5 v 37.5 h -75 v 12.5 h 125 v 12.5 h -12.5 v 12.5 h -12.5 v 12.5 h -12.5 v 12.5 h -12.5 v 12.5 h -12.5 v 12.5 h -12.5 v 12.5 h -12.5 v 12.5 h 12.5 v 12.5 h 25 v 12.5 h 25 v -12.5 h -25 v -12.5 h -25 v -12.5 h 12.5 v -12.5 h 12.5 v -12.5 h 12.5 v -12.5 h 12.5 v -12.5 h 12.5 v -12.5 h 12.5 v -12.5 h 12.5 v -12.5 z m -162.5,112.5 q 0,0 0,25 h 12.5 q 0,0 0,-25 z m 12.5,0 h 12.5 v -12.5 h -12.5 z m 12.5,-12.5 h 12.5 v -12.5 h -12.5 z m 12.5,-12.5 h 12.5 v -12.5 h -12.5 z"
           id="path36" />
      </g>
      <path
         d="m 39.385524,84.424382 v -0.220486 h -0.220486 v 0.220486 z m 0,-2.425349 v -0.220486 h -0.220486 v 0.220486 h -0.220486 q 0,0 0,0.440973 h -0.220486 q 0,0 0,1.322917 h 0.220486 q 0,0 0,0.440973 h 0.220486 q 0,0 0,-0.440973 h -0.220486 q 0,0 0,-1.322917 h 0.220486 q 0,0 0,-0.440973 z m 4.630207,2.204863 v -0.220487 h -1.102432 v -0.220486 h -0.220486 q 0,0 0,0.440973 z m -1.102432,-0.440973 h 0.220487 v -0.220486 h -0.220487 z m 0.220487,-0.220486 h 0.220486 v -0.220486 h -0.220486 z m 0.220486,-0.220486 h 0.220486 v -0.220487 h -0.220486 z m 0.220486,-0.220487 h 0.220486 v -0.220486 h -0.220486 z m 0.220486,-0.220486 h 0.220487 q 0,0 0,-0.440972 h -1.322918 v 0.220486 h 1.102431 z m 3.307289,-1.102431 v 2.425349 h 0.220486 q 0,0 0,-1.322918 h 0.220486 v -0.220486 h -0.220486 q 0,0 0,-0.881945 z m 1.102431,0.881945 v 1.543404 h 0.220486 v -1.543404 z m -0.661459,0 h 0.661459 v -0.220486 h -0.661459 z m 4.189235,1.322917 v 0.220487 h 0.661458 v -0.220487 z m 0,0 v -0.661458 h -0.220487 v 0.661458 z m 0.881945,0 v 0.220487 h 0.220486 v -1.543404 h -0.220486 q 0,0 0,0.440972 H 51.73274 v 0.220487 h 0.881945 q 0,0 0,0.440972 h -0.220487 v 0.220486 z M 51.73274,82.660492 h -0.220487 v 0.220486 h 0.220487 z m 0,0 h 0.881945 V 82.440006 H 51.73274 Z m 4.189233,-0.220486 q 0,0 0,1.76389 h 0.220486 q 0,0 0,-1.322918 h 0.220486 v -0.220486 h -0.220486 v -0.220486 z m 1.102431,0.220486 v 1.543404 h 0.220486 v -1.543404 z m -0.661459,0 h 0.661459 v -0.220486 h -0.661459 z m 4.189234,1.76389 v 0.220486 h 0.881945 v -0.220486 z m 0,0 q 0,0 0,-0.440973 h -0.220487 q 0,0 0,0.440973 z m 0.881945,0 h 0.220486 q 0,0 0,-0.440973 h -0.220486 z m -0.881945,-0.440973 h 0.881945 v -0.220486 h -0.661459 v -0.220486 h 0.440972 v -0.220486 h -0.661458 z m 0,-0.661458 v -0.661459 h -0.220487 v 0.661459 z m 0.661458,0 h 0.220487 v -0.661459 h -0.220487 z m -0.661458,-0.661459 h 0.661458 v -0.220486 h -0.661458 z m 0.881945,0 h 0.220486 q 0,0 0,-0.440973 h -0.220486 z m 3.748262,1.543404 H 64.9619 v 0.220486 h 0.220486 z m 0,0 h 0.220486 q 0,0 0,-0.440973 h -0.220486 z m 0.220486,-0.440973 h 0.220487 q 0,0 0,-1.322917 h -0.220487 z m 0,-1.322917 q 0,0 0,-0.440973 h -0.220486 q 0,0 0,0.440973 z M 65.182386,81.999033 V 81.778547 H 64.9619 v 0.220486 z"
         id="text12"
         style="font-size:3.52778px;font-family:UnifontExMono;-inkscape-font-specification:UnifontExMono;letter-spacing:2.64583px;stroke-width:0.1;stroke-miterlimit:3.4"
         aria-label="(zhang)" />
      <path
         d="m 516.20702,496.23108 v -0.83333 h -0.83333 v 0.83333 z m 0,-9.16664 v -0.83333 h -0.83333 v 0.83333 h -0.83333 q 0,0 0,1.66666 h -0.83334 q 0,0 0,4.99999 h 0.83334 q 0,0 0,1.66666 h 0.83333 q 0,0 0,-1.66666 h -0.83333 q 0,0 0,-4.99999 h 0.83333 q 0,0 0,-1.66666 z m 16.66665,9.16664 h -3.33333 v 0.83334 h 3.33333 z m 0,0 h 0.83333 v -7.49998 h -0.83333 v 4.16666 h -0.83333 v 0.83333 h -1.66667 v 0.83333 h 1.66667 v -0.83333 h 0.83333 z m -2.5,-2.49999 v -0.83333 h -0.83333 v 0.83333 z m -0.83333,-0.83333 v -4.16666 h -0.83333 v 4.16666 z m 20.83331,2.49999 v -0.83333 h -1.66666 v -5.83332 h -1.66667 v 0.83333 h 0.83333 q 0,0 0,4.99999 h -1.66666 v 0.83333 z m -2.5,-9.16664 q 0,0 0,1.66666 h 0.83334 q 0,0 0,-1.66666 z m 15.83333,9.16664 h -0.83334 v 0.83333 h 0.83334 z m 0,0 h 0.83333 q 0,0 0,-1.66666 h -0.83333 z m 0.83333,-1.66666 h 0.83333 q 0,0 0,-4.99999 h -0.83333 z m 0,-4.99999 q 0,0 0,-1.66666 h -0.83333 q 0,0 0,1.66666 z m -0.83333,-1.66666 v -0.83333 h -0.83334 v 0.83333 z"
         id="text26"
         style="font-size:13.3333px;font-family:UnifontExMono;-inkscape-font-specification:UnifontExMono;letter-spacing:10px;white-space:pre;stroke-width:0.377953;stroke-miterlimit:3.4"
         transform="matrix(0.26458333,0,0,0.26458333,-33.296686,-46.870102)"
         aria-label="(yi)" />
      <path
         d="m 722.20116,496.23108 v -0.83333 h -0.83333 v 0.83333 z m 0,-9.16664 v -0.83333 h -0.83333 v 0.83333 h -0.83333 q 0,0 0,1.66666 h -0.83333 q 0,0 0,4.99999 h 0.83333 q 0,0 0,1.66666 h 0.83333 q 0,0 0,-1.66666 h -0.83333 q 0,0 0,-4.99999 h 0.83333 q 0,0 0,-1.66666 z m 17.49998,8.33331 v -0.83333 h -4.16666 v -0.83333 h -0.83333 q 0,0 0,1.66666 z m -4.16666,-1.66666 h 0.83333 v -0.83333 h -0.83333 z m 0.83333,-0.83333 h 0.83334 v -0.83333 h -0.83334 z m 0.83334,-0.83333 h 0.83333 v -0.83333 h -0.83333 z m 0.83333,-0.83333 h 0.83333 v -0.83333 h -0.83333 z m 0.83333,-0.83333 h 0.83333 q 0,0 0,-1.66667 h -4.99999 v 0.83333 h 4.16666 z m 12.49999,-4.16666 v 9.16664 h 0.83333 q 0,0 0,-4.99998 h 0.83333 v -0.83334 h -0.83333 q 0,0 0,-3.33332 z m 4.16666,3.33332 v 5.83332 h 0.83333 v -5.83332 z m -2.5,0 h 2.5 v -0.83333 h -2.5 z m 19.99998,5.83332 v -0.83333 h -1.66666 v -5.83332 h -1.66666 v 0.83333 h 0.83333 q 0,0 0,4.99999 h -1.66667 v 0.83333 z m -2.49999,-9.16664 q 0,0 0,1.66666 h 0.83333 q 0,0 0,-1.66666 z m 15.83331,9.16664 h -0.83333 v 0.83333 h 0.83333 z m 0,0 h 0.83333 q 0,0 0,-1.66666 h -0.83333 z m 0.83333,-1.66666 h 0.83333 q 0,0 0,-4.99999 h -0.83333 z m 0,-4.99999 q 0,0 0,-1.66666 h -0.83333 q 0,0 0,1.66666 z m -0.83333,-1.66666 v -0.83333 h -0.83333 v 0.83333 z"
         id="text27"
         style="font-size:13.3333px;font-family:UnifontExMono;-inkscape-font-specification:UnifontExMono;letter-spacing:10px;white-space:pre;stroke-width:0.377953;stroke-miterlimit:3.4"
         transform="matrix(0.26458333,0,0,0.26458333,-33.648165,-46.649617)"
         aria-label="(zhi)" />
      <g
         id="text30"
         style="font-size:18.6667px;font-family:Helvetica;-inkscape-font-specification:Helvetica;letter-spacing:0px;word-spacing:0px;white-space:pre;stroke-width:0.377953;stroke-miterlimit:3.4"
         transform="matrix(0.26458333,0,0,0.26458333,-41.0397,-45.989785)"
         aria-label="PINYIN-TO-HANZI CONVERTER • 93% acc. • N-gram model • 200M tokens">
        <path
           style="font-weight:bold;-inkscape-font-specification:'Helvetica Bold'"
           d="m 261.24676,518.65359 q 0,-1.04817 -0.55599,-1.49479 -0.54688,-0.44662 -1.54037,-0.44662 h -2.61589 v 3.95574 h 2.61589 q 0.99349,0 1.54037,-0.48307 0.55599,-0.48308 0.55599,-1.53126 z m 2.77995,-0.0182 q 0,2.37891 -1.20312,3.36328 -1.20313,0.98438 -3.43621,0.98438 h -2.85287 v 4.83074 h -2.78906 v -13.43492 h 5.85157 q 2.02344,0 3.22657,1.03906 1.20312,1.03907 1.20312,3.21746 z m 4.67579,9.1784 h -2.78906 v -13.43492 h 2.78906 z m -1.39453,-13.69925 z m 3.96485,0.26433 h 2.94402 l 5.35027,9.37892 v -9.37892 h 2.61589 v 13.43492 h -2.8073 l -5.48699,-9.54299 v 9.54299 h -2.61589 z m 5.55991,-0.0274 z m 15.63154,0.0274 h 3.18099 l -4.4935,8.38543 v 5.04949 h -2.80729 v -5.04949 l -4.64845,-8.38543 h 3.3086 l 2.78907,5.85157 z m -2.78907,0 z m 10.14455,13.43492 h -2.78907 v -13.43492 h 2.78907 z m -1.39454,-13.69925 z m 3.96485,0.26433 h 2.94402 l 5.35027,9.37892 v -9.37892 h 2.61589 v 13.43492 h -2.8073 l -5.48699,-9.54299 v 9.54299 h -2.61589 z m 5.55991,-0.0274 z m 6.97267,7.02736 h 5.23178 v 2.46094 h -5.23178 z m 16.97139,-7.00001 v 2.37891 h -4.01954 v 11.05601 h -2.82553 v -11.05601 h -4.03777 v -2.37891 z m 7.25522,11.42971 q 1.66797,0 2.64323,-1.23048 0.98438,-1.23047 0.98438,-3.5 0,-2.26042 -0.98438,-3.49089 -0.97526,-1.23959 -2.64323,-1.23959 -1.66797,0 -2.66146,1.23047 -0.9935,1.23047 -0.9935,3.50001 0,2.26953 0.9935,3.5 0.99349,1.23048 2.66146,1.23048 z m 6.43491,-4.73048 q 0,3.61849 -2.03256,5.54167 -1.52214,1.56772 -4.40235,1.56772 -2.88021,0 -4.40235,-1.56772 -2.04167,-1.92318 -2.04167,-5.54167 0,-3.69141 2.04167,-5.54168 1.52214,-1.56771 4.40235,-1.56771 2.88021,0 4.40235,1.56771 2.03256,1.85027 2.03256,5.54168 z m -6.43491,-7.10939 z m 7.58334,7.41017 h 5.23178 v 2.46094 h -5.23178 z m 7.19142,6.43491 v -13.43492 h 2.77995 v 5.1224 h 5.25001 v -5.1224 h 2.78907 v 13.43492 h -2.78907 v -5.99741 h -5.25001 v 5.99741 z m 17.17191,-5.07683 h 3.40886 l -1.67709,-5.28647 z m 0.17317,-8.35809 h 3.17188 l 4.75782,13.43492 h -3.04427 l -0.86589,-2.76173 h -4.94923 l -0.92969,2.76173 h -2.9349 z m 1.56771,0 z m 8.02086,0 h 2.94401 l 5.35027,9.37892 v -9.37892 h 2.61589 v 13.43492 h -2.80729 l -5.48699,-9.54299 v 9.54299 h -2.61589 z m 5.5599,-0.0274 z m 7.01824,11.09247 6.93621,-8.68621 h -6.76304 v -2.37891 h 10.26304 v 2.2513 l -7.02735,8.81382 h 7.04558 v 2.3698 H 393.4358 Z m 5.30469,-11.06512 z m 9.61592,13.43492 h -2.78907 v -13.43492 h 2.78907 z m -1.39454,-13.69925 z m 8.61329,7.09116 q 0,-3.51823 1.88672,-5.42318 1.64063,-1.65886 4.17449,-1.65886 3.39063,0 4.95834,2.22396 0.86589,1.2487 0.92969,2.50652 h -2.8073 q -0.27343,-0.96615 -0.70182,-1.45834 -0.76563,-0.875 -2.26953,-0.875 -1.53126,0 -2.41537,1.23958 -0.88412,1.23047 -0.88412,3.4909 0,2.26042 0.92969,3.39063 0.9388,1.12109 2.37891,1.12109 1.47657,0 2.25131,-0.96615 0.42838,-0.51953 0.71093,-1.55859 h 2.77996 q -0.36459,2.19662 -1.8685,3.57292 -1.49479,1.37631 -3.83724,1.37631 -2.89844,0 -4.5573,-1.85938 -1.65886,-1.8685 -1.65886,-5.12241 z m 5.97918,-7.23699 z m 14.02737,11.83987 q 1.66798,0 2.64324,-1.23048 0.98437,-1.23047 0.98437,-3.5 0,-2.26042 -0.98437,-3.49089 -0.97526,-1.23959 -2.64324,-1.23959 -1.66797,0 -2.66146,1.23047 -0.99349,1.23047 -0.99349,3.50001 0,2.26953 0.99349,3.5 0.99349,1.23048 2.66146,1.23048 z m 6.43491,-4.73048 q 0,3.61849 -2.03255,5.54167 -1.52214,1.56772 -4.40236,1.56772 -2.88021,0 -4.40235,-1.56772 -2.04167,-1.92318 -2.04167,-5.54167 0,-3.69141 2.04167,-5.54168 1.52214,-1.56771 4.40235,-1.56771 2.88022,0 4.40236,1.56771 2.03255,1.85027 2.03255,5.54168 z m -6.43491,-7.10939 z m 8.53127,0.41016 h 2.94402 l 5.35027,9.37892 v -9.37892 h 2.61589 v 13.43492 h -2.8073 l -5.48699,-9.54299 v 9.54299 h -2.61589 z m 5.55991,-0.0274 z m 15.83205,0.0274 h 2.91667 l -4.58464,13.43492 h -2.65235 l -4.53907,-13.43492 h 2.9987 l 2.91667,10.19923 z m 14.51956,2.37891 h -7.10939 v 2.85287 h 6.52606 v 2.33334 h -6.52606 v 3.45443 h 7.43752 v 2.41537 h -10.18101 v -13.43492 h 9.85288 z m 5.32293,-0.0456 v 3.60939 h 3.181 q 0.94791,0 1.42187,-0.21875 0.83855,-0.38282 0.83855,-1.51303 0,-1.22135 -0.8112,-1.64063 -0.45573,-0.23698 -1.36719,-0.23698 z m 3.84636,-2.33333 q 1.41276,0.0273 2.16928,0.34635 0.76562,0.31901 1.29427,0.93881 0.4375,0.51041 0.69271,1.13021 0.25521,0.61979 0.25521,1.41276 0,0.95703 -0.48308,1.88672 -0.48307,0.92058 -1.59505,1.30339 0.92969,0.3737 1.3125,1.06641 0.39193,0.68359 0.39193,2.09636 v 0.90234 q 0,0.92058 0.0729,1.2487 0.10937,0.51953 0.51041,0.76563 v 0.33724 h -3.08985 q -0.1276,-0.44662 -0.18229,-0.72006 -0.10937,-0.5651 -0.11849,-1.15755 l -0.0182,-1.2487 q -0.0182,-1.28516 -0.47396,-1.71355 -0.44661,-0.42838 -1.6862,-0.42838 h -2.89844 v 5.26824 h -2.74349 v -13.43492 z m 16.58858,0 v 2.37891 h -4.01954 v 11.05601 h -2.82553 v -11.05601 h -4.03776 v -2.37891 z m 11.57554,2.37891 h -7.10939 v 2.85287 h 6.52605 v 2.33334 h -6.52605 v 3.45443 h 7.43751 v 2.41537 h -10.18101 v -13.43492 h 9.85289 z m 5.32292,-0.0456 v 3.60939 h 3.181 q 0.94792,0 1.42188,-0.21875 0.83854,-0.38282 0.83854,-1.51303 0,-1.22135 -0.8112,-1.64063 -0.45573,-0.23698 -1.36719,-0.23698 z m 3.84637,-2.33333 q 1.41276,0.0273 2.16927,0.34635 0.76563,0.31901 1.29427,0.93881 0.4375,0.51041 0.69271,1.13021 0.25521,0.61979 0.25521,1.41276 0,0.95703 -0.48307,1.88672 -0.48308,0.92058 -1.59506,1.30339 0.92969,0.3737 1.31251,1.06641 0.39192,0.68359 0.39192,2.09636 v 0.90234 q 0,0.92058 0.0729,1.2487 0.10938,0.51953 0.51042,0.76563 v 0.33724 h -3.08985 q -0.12761,-0.44662 -0.18229,-0.72006 -0.10938,-0.5651 -0.11849,-1.15755 l -0.0182,-1.2487 q -0.0182,-1.28516 -0.47396,-1.71355 -0.44662,-0.42838 -1.6862,-0.42838 h -2.89845 v 5.26824 h -2.74349 v -13.43492 z"
           id="path37" />
        <path
           d="m 542.50508,521.12365 q 0,0.875 -0.57422,1.44922 -0.56511,0.57422 -1.44011,0.57422 -0.875,0 -1.44922,-0.57422 -0.56511,-0.57422 -0.56511,-1.44922 0,-0.875 0.56511,-1.44011 0.57422,-0.5651 1.44922,-0.5651 0.875,0 1.44011,0.5651 0.57422,0.56511 0.57422,1.44011 z"
           id="path38" />
        <path
           style="font-style:oblique;-inkscape-font-specification:'Helvetica Oblique'"
           d="m 551.98426,524.66012 q -0.21875,1.35807 0.64714,1.8776 0.44661,0.27344 1.07552,0.27344 1.17578,0 2.21485,-0.97526 1.03906,-0.98438 2.02344,-3.98308 -0.73829,0.86589 -1.6224,1.22136 -0.875,0.34635 -1.80469,0.34635 -1.88672,0 -2.73438,-1.17578 -0.84766,-1.17579 -0.45573,-3.02605 0.3737,-1.77735 1.74089,-3.12631 1.3763,-1.34896 3.49089,-1.34896 2.85287,0 3.39063,2.57032 0.30078,1.41276 -0.14583,3.53646 -0.51042,2.39714 -1.6224,4.24741 -1.85027,3.08073 -4.70314,3.08073 -1.91406,0 -2.69792,-1.0026 -0.77474,-1.00261 -0.45573,-2.51563 z m 6.26173,-5.56902 q 0.3099,-1.44011 -0.27344,-2.14194 -0.57422,-0.71093 -1.69531,-0.71093 -1.20313,0 -2.07813,0.8112 -0.87501,0.80208 -1.16667,2.15104 -0.26433,1.27604 0.1914,2.03256 0.46485,0.74739 1.82292,0.74739 0.97527,0 1.91407,-0.63802 0.94792,-0.64714 1.28516,-2.2513 z m 2.26954,4.71224 h 1.71354 q -0.16406,1.26693 0.082,1.84115 0.41927,1.02995 2.08725,1.02995 1.29427,0 2.22396,-0.69271 0.92969,-0.69271 1.16667,-1.78646 0.28255,-1.34896 -0.42839,-1.88672 -0.71094,-0.53776 -2.17839,-0.53776 -0.16406,0 -0.33724,0.009 -0.16406,0 -0.33724,0.009 l 0.3099,-1.44922 q 0.24609,0.0273 0.41927,0.0365 0.17318,0.009 0.3737,0.009 0.92057,0 1.57682,-0.29167 1.13933,-0.51042 1.42188,-1.82292 0.20964,-0.97526 -0.3737,-1.50391 -0.58333,-0.52864 -1.50391,-0.52864 -1.64063,0 -2.4974,1.09375 -0.47396,0.60156 -0.75651,1.71354 h -1.6224 q 0.3099,-1.45833 1.11198,-2.47917 1.38542,-1.82292 3.91017,-1.82292 1.99609,0 2.89844,0.89323 0.91146,0.88412 0.55599,2.57032 -0.26432,1.20313 -1.06641,1.95052 -0.5013,0.46485 -1.19401,0.72917 0.96615,0.28255 1.3763,1.09375 0.41016,0.80209 0.16407,1.96876 -0.40105,1.86849 -1.88673,3.04427 -1.47656,1.17579 -3.73698,1.17579 -2.31511,0 -3.08985,-1.26693 -0.76563,-1.27605 -0.38281,-3.09897 z m 25.64848,0.83855 q -0.27344,1.3125 -1.40365,2.24219 -1.12109,0.92969 -2.4336,0.92969 -1.32161,0 -2.0599,-0.92969 -0.72916,-0.92969 -0.45573,-2.24219 0.28256,-1.31251 1.40365,-2.24219 1.13021,-0.92969 2.45183,-0.92969 1.3125,0 2.04167,0.92969 0.73828,0.92968 0.45573,2.24219 z m -2.39714,-9.82554 h 1.01172 l -10.14455,13.34377 h -1.01172 z m -6.48959,3.51823 q 0.16406,-0.77474 -0.27344,-1.32161 -0.4375,-0.55599 -1.22136,-0.55599 -0.77474,0 -1.4401,0.54687 -0.66537,0.54688 -0.82943,1.33073 -0.17318,0.77474 0.26432,1.33074 0.4375,0.54687 1.21224,0.54687 0.78386,0 1.44922,-0.54687 0.66537,-0.556 0.83855,-1.33074 z m 1.29427,0 q -0.28255,1.31251 -1.41276,2.2422 -1.1211,0.92968 -2.44272,0.92968 -1.3125,0 -2.05078,-0.92968 -0.72917,-0.92969 -0.44662,-2.2422 0.27344,-1.3125 1.40365,-2.24219 1.13021,-0.9388 2.44271,-0.9388 1.32162,0 2.05079,0.9388 0.72917,0.92969 0.45573,2.24219 z m 6.29819,6.30731 q 0.17318,-0.77474 -0.26433,-1.32162 -0.4375,-0.55599 -1.21224,-0.55599 -0.78385,0 -1.44922,0.55599 -0.66536,0.54688 -0.83854,1.32162 -0.16406,0.77474 0.27344,1.33073 0.4375,0.54687 1.22135,0.54687 0.77474,0 1.44011,-0.54687 0.66537,-0.55599 0.82943,-1.33073 z m 10.94664,2.10547 q 0.86589,0 1.76824,-0.40104 1.50391,-0.66537 1.83203,-2.17839 l 0.27344,-1.32162 q -0.33724,0.19141 -0.83854,0.31901 -0.50131,0.12761 -0.96615,0.18229 l -1.02084,0.12761 q -0.92057,0.11849 -1.42187,0.3737 -0.84766,0.42838 -1.04818,1.36719 -0.15495,0.71094 0.27343,1.12109 0.4375,0.41016 1.14844,0.41016 z m 3.25392,-4.84897 q 0.58333,-0.0729 0.86588,-0.47396 0.15495,-0.21875 0.23698,-0.6289 0.18229,-0.83855 -0.33724,-1.21225 -0.51953,-0.38281 -1.63151,-0.38281 -1.28516,0 -1.96875,0.69271 -0.38282,0.38281 -0.62891,1.13933 h -1.53125 q 0.42838,-1.8047 1.70443,-2.50652 1.27604,-0.71094 2.76172,-0.71094 1.72266,0 2.65235,0.65625 0.92969,0.65625 0.63802,2.04167 l -1.19401,5.62371 q -0.0547,0.25521 0.009,0.41016 0.0729,0.15495 0.41016,0.15495 0.10937,0 0.24609,-0.009 0.14584,-0.0182 0.3099,-0.0456 l -0.26432,1.21224 q -0.40105,0.10938 -0.61068,0.13672 -0.20052,0.0273 -0.54688,0.0273 -0.84766,0 -1.10286,-0.60156 -0.13672,-0.31901 -0.0911,-0.90235 -0.64714,0.65626 -1.6862,1.13933 -1.03907,0.48307 -2.16928,0.48307 -1.35807,0 -2.05078,-0.82031 -0.6836,-0.82943 -0.41927,-2.06902 0.29166,-1.35807 1.29427,-2.10547 1.01172,-0.74739 2.42448,-0.92057 z m 12.97007,-0.5651 h -1.59505 q 0.0456,-0.90235 -0.34636,-1.4948 -0.39192,-0.60156 -1.54036,-0.60156 -1.56772,0 -2.57032,1.53125 -0.64714,0.99349 -0.95703,2.45183 -0.31902,1.46745 0.0911,2.47006 0.41016,1.0026 1.74089,1.0026 1.02084,0 1.75,-0.61979 0.72917,-0.62891 1.1849,-1.71355 h 1.59506 q -0.6836,1.94141 -1.96876,2.84376 -1.28516,0.89323 -2.98959,0.89323 -1.91406,0 -2.76172,-1.39453 -0.83854,-1.40365 -0.39193,-3.50001 0.54688,-2.57032 2.09636,-4.00131 1.5586,-1.43099 3.49089,-1.43099 1.64974,0 2.50652,0.80208 0.86588,0.80209 0.66536,2.76173 z m 9.33335,0 h -1.59506 q 0.0456,-0.90235 -0.34635,-1.4948 -0.39193,-0.60156 -1.54037,-0.60156 -1.56771,0 -2.57032,1.53125 -0.64713,0.99349 -0.95703,2.45183 -0.31901,1.46745 0.0911,2.47006 0.41015,1.0026 1.74088,1.0026 1.02084,0 1.75001,-0.61979 0.72916,-0.62891 1.18489,-1.71355 h 1.59506 q -0.6836,1.94141 -1.96875,2.84376 -1.28516,0.89323 -2.98959,0.89323 -1.91407,0 -2.76173,-1.39453 -0.83854,-1.40365 -0.39192,-3.50001 0.54687,-2.57032 2.09635,-4.00131 1.5586,-1.43099 3.4909,-1.43099 1.64974,0 2.50651,0.80208 0.86589,0.80209 0.66537,2.76173 z m 1.07551,4.49349 h 1.90495 l -0.41927,1.98699 h -1.90495 z m 14.71099,-4.70313 q -0.19141,0.875 -0.88412,1.44922 -0.69271,0.57422 -1.56771,0.57422 -0.875,0 -1.32162,-0.57422 -0.44661,-0.57422 -0.2552,-1.44922 0.18229,-0.875 0.86588,-1.44011 0.69271,-0.5651 1.56771,-0.5651 0.87501,0 1.32162,0.5651 0.45573,0.56511 0.27344,1.44011 z m 9.63413,-6.69923 h 2.14193 l 4.45704,10.84637 2.30599,-10.84637 h 1.72266 l -2.84375,13.38935 h -2.03256 l -4.56641,-10.83726 -2.29688,10.83726 h -1.73178 z m 11.26562,7.34637 h 4.57553 l -0.35547,1.6862 h -4.57553 z m 12.80601,-3.32683 q 0.40104,0.31901 0.7474,0.92969 l 0.26432,-1.23047 h 1.51303 l -1.88673,8.87762 q -0.39192,1.85938 -1.16666,2.9349 -1.44923,1.98698 -4.28387,1.98698 -1.57682,0 -2.50651,-0.71094 -0.92058,-0.70182 -0.72917,-2.20573 h 1.66797 q -0.0182,0.65625 0.26433,1.01172 0.4375,0.54688 1.63151,0.54688 1.88672,0 2.75261,-1.33074 0.51042,-0.78385 0.91146,-2.79818 -0.64714,0.7474 -1.42188,1.11198 -0.76563,0.36459 -1.90495,0.36459 -1.58594,0 -2.54297,-1.1211 -0.94792,-1.13021 -0.39193,-3.72787 0.51953,-2.45183 2.00521,-3.82813 1.49479,-1.37631 3.19011,-1.37631 1.14844,0 1.88672,0.56511 z m -1.89583,0.88412 q -1.73178,0 -2.70704,1.62239 -0.52865,0.86589 -0.82031,2.26954 -0.35547,1.64974 0.1276,2.51563 0.49219,0.85677 1.6224,0.85677 1.76823,0 2.82552,-1.59505 0.59245,-0.90235 0.84766,-2.10548 0.39193,-1.8138 -0.17318,-2.6888 -0.5651,-0.875 -1.72265,-0.875 z m 6.95444,-1.27605 h 1.55859 l -0.35547,1.6862 q 0.29167,-0.49219 1.1849,-1.19401 0.90235,-0.71094 1.87761,-0.71094 0.0456,0 0.15495,0.009 0.10937,0.009 0.36458,0.0365 l -0.36458,1.73178 q -0.14584,-0.0274 -0.26433,-0.0365 -0.11849,-0.009 -0.26432,-0.009 -1.23958,0 -2.07813,0.80209 -0.82943,0.79297 -1.05729,1.83203 l -1.1849,5.6146 h -1.64063 z m 7.32813,8.69533 q 0.86589,0 1.76824,-0.40104 1.50391,-0.66537 1.83203,-2.17839 l 0.27344,-1.32162 q -0.33724,0.19141 -0.83854,0.31901 -0.50131,0.12761 -0.96615,0.18229 l -1.02084,0.12761 q -0.92057,0.11849 -1.42187,0.3737 -0.84766,0.42838 -1.04818,1.36719 -0.15495,0.71094 0.27343,1.12109 0.43751,0.41016 1.14844,0.41016 z m 3.25392,-4.84897 q 0.58333,-0.0729 0.86588,-0.47396 0.15495,-0.21875 0.23698,-0.6289 0.18229,-0.83855 -0.33724,-1.21225 -0.51953,-0.38281 -1.63151,-0.38281 -1.28516,0 -1.96875,0.69271 -0.38282,0.38281 -0.62891,1.13933 h -1.53125 q 0.42838,-1.8047 1.70443,-2.50652 1.27604,-0.71094 2.76172,-0.71094 1.72266,0 2.65235,0.65625 0.92969,0.65625 0.63802,2.04167 l -1.19401,5.62371 q -0.0547,0.25521 0.009,0.41016 0.0729,0.15495 0.41016,0.15495 0.10937,0 0.24609,-0.009 0.14584,-0.0182 0.3099,-0.0456 l -0.26432,1.21224 q -0.40105,0.10938 -0.61068,0.13672 -0.20052,0.0273 -0.54688,0.0273 -0.84766,0 -1.10286,-0.60156 -0.13672,-0.31901 -0.0911,-0.90235 -0.64714,0.65626 -1.6862,1.13933 -1.03907,0.48307 -2.16928,0.48307 -1.35807,0 -2.05078,-0.82031 -0.6836,-0.82943 -0.41927,-2.06902 0.29166,-1.35807 1.29427,-2.10547 1.01172,-0.74739 2.42448,-0.92057 z m 5.97006,-3.84636 h 1.6224 l -0.29167,1.38542 q 0.73828,-0.72005 1.27605,-1.04818 0.92969,-0.55599 1.95964,-0.55599 1.16666,0 1.75911,0.57422 0.32813,0.32813 0.51954,0.96615 0.72005,-0.78386 1.53125,-1.15756 0.82031,-0.38281 1.74089,-0.38281 1.96875,0 2.37891,1.42188 0.21875,0.76562 -0.0547,2.0599 l -1.37631,6.49871 h -1.70443 l 1.44011,-6.78126 q 0.20052,-0.97527 -0.20963,-1.33985 -0.41016,-0.36458 -1.11199,-0.36458 -0.96614,0 -1.80469,0.64713 -0.82942,0.64714 -1.14844,2.16016 l -1.20312,5.6784 h -1.66797 l 1.34896,-6.37111 q 0.20963,-0.99349 0.0729,-1.44922 -0.22786,-0.68359 -1.2487,-0.68359 -0.92969,0 -1.85026,0.72005 -0.91146,0.72005 -1.3125,2.60677 l -1.09376,5.1771 h -1.64062 z m 20.73572,0 h 1.6224 l -0.29167,1.38542 q 0.73828,-0.72005 1.27604,-1.04818 0.92969,-0.55599 1.95964,-0.55599 1.16667,0 1.75912,0.57422 0.32813,0.32813 0.51953,0.96615 0.72006,-0.78386 1.53126,-1.15756 0.82031,-0.38281 1.74088,-0.38281 1.96876,0 2.37891,1.42188 0.21876,0.76562 -0.0547,2.0599 l -1.37631,6.49871 h -1.70443 l 1.44011,-6.78126 q 0.20052,-0.97527 -0.20964,-1.33985 -0.41015,-0.36458 -1.11198,-0.36458 -0.96615,0 -1.80469,0.64713 -0.82943,0.64714 -1.14844,2.16016 l -1.20313,5.6784 h -1.66797 l 1.34896,-6.37111 q 0.20964,-0.99349 0.0729,-1.44922 -0.22786,-0.68359 -1.2487,-0.68359 -0.92969,0 -1.85026,0.72005 -0.91146,0.72005 -1.31251,2.60677 l -1.09375,5.1771 h -1.64063 z m 21.26435,4.72136 q 0.29167,-1.36719 0.0365,-2.22396 -0.41016,-1.34896 -2.10547,-1.34896 -1.50391,0 -2.4336,1.14844 -0.92057,1.14844 -1.26693,2.77084 -0.32813,1.5586 0.1276,2.59766 0.46485,1.03906 1.95053,1.03906 1.63151,0 2.4974,-1.23047 0.875,-1.23958 1.19401,-2.75261 z m 1.72266,-0.0456 q -0.5013,2.36068 -1.97787,3.90105 -1.47656,1.54037 -3.89193,1.54037 -2.01433,0 -2.90756,-1.35808 -0.89323,-1.36719 -0.41016,-3.66407 0.52865,-2.46094 2.08725,-3.91928 1.55859,-1.45833 3.66407,-1.45833 1.88672,0 2.91667,1.25781 1.03906,1.25782 0.51953,3.70053 z m 4.94012,4.00131 q 1.13932,0 2.07812,-0.97526 0.93881,-0.98438 1.33074,-2.81641 0.39192,-1.85027 -0.17318,-2.73438 -0.56511,-0.89323 -1.67709,-0.89323 -1.23958,0 -2.21485,0.94791 -0.96614,0.94792 -1.35807,2.78907 -0.33724,1.56771 0.10026,2.62501 0.44662,1.05729 1.91407,1.05729 z m 3.32682,-8.37632 q 0.38282,0.27344 0.79298,0.95704 l 1.04817,-4.931 h 1.57683 l -2.85287,13.43492 h -1.47657 l 0.28256,-1.35808 q -0.76563,0.90235 -1.64063,1.30339 -0.86589,0.40104 -1.87761,0.40104 -1.63151,0 -2.53386,-1.36719 -0.90234,-1.3763 -0.41015,-3.65495 0.44661,-2.13282 1.86849,-3.69142 1.42188,-1.56771 3.44532,-1.56771 1.12109,0 1.77734,0.47396 z m 12.2956,1.23047 q 0.33724,0.73829 0.29167,1.72266 0.009,0.67448 -0.3099,2.15105 h -7.15496 q -0.27344,1.48568 0.19141,2.38802 0.47396,0.89323 1.85026,0.89323 1.28516,0 2.22396,-0.84765 0.54688,-0.49219 0.86589,-1.13933 h 1.61329 q -0.1823,0.53776 -0.6836,1.20313 -0.49219,0.65625 -1.02995,1.07552 -0.90234,0.72917 -2.0599,0.98438 -0.62891,0.14583 -1.3763,0.14583 -1.82292,0 -2.8073,-1.32161 -0.98438,-1.33074 -0.47396,-3.71876 0.5013,-2.35157 2.08724,-3.81902 1.58594,-1.46745 3.64584,-1.46745 1.03907,0 1.91407,0.49219 0.875,0.48307 1.21224,1.25781 z m -1.43099,2.57032 q 0.1276,-1.06641 -0.10026,-1.70443 -0.41927,-1.1849 -1.9961,-1.1849 -1.13021,0 -2.06901,0.82032 -0.93881,0.8112 -1.25782,2.06901 z m 5.39584,-7.72918 h 1.64063 l -2.84375,13.38935 h -1.64063 z m 11.59377,6.69923 q -0.19141,0.875 -0.88412,1.44922 -0.69271,0.57422 -1.56771,0.57422 -0.875,0 -1.32162,-0.57422 -0.44661,-0.57422 -0.2552,-1.44922 0.18229,-0.875 0.86588,-1.44011 0.69271,-0.5651 1.56771,-0.5651 0.87501,0 1.32162,0.5651 0.45573,0.56511 0.27344,1.44011 z m 10.1172,1.48568 1.95964,-1.01172 q 1.32162,-0.68359 1.90495,-1.16667 0.90235,-0.75651 1.11198,-1.73177 0.2461,-1.13933 -0.30078,-1.80469 -0.53776,-0.67448 -1.67708,-0.67448 -1.6862,0 -2.60678,1.27604 -0.49219,0.6836 -0.78385,1.89584 h -1.66798 q 0.39193,-1.70443 1.22136,-2.77996 1.46745,-1.89583 4.16537,-1.89583 2.24219,0 3.01693,1.21224 0.77475,1.21224 0.46485,2.69792 -0.33724,1.56771 -1.67709,2.67969 -0.77474,0.64714 -2.61589,1.56771 l -1.39453,0.69271 q -1.00261,0.49219 -1.60417,0.93881 -1.08464,0.79297 -1.52214,1.75912 h 7.12762 l -0.32813,1.54948 h -8.95965 q 0.44662,-1.6862 1.3125,-2.9349 0.87501,-1.2487 2.85287,-2.26954 z m 16.67061,-5.76043 q 0.53776,1.61329 -0.0638,4.42058 -0.56511,2.66147 -1.73178,4.40236 -1.67708,2.4974 -4.28386,2.4974 -2.35157,0 -3.06251,-2.04167 -0.59244,-1.70443 0.0182,-4.57553 0.46485,-2.22396 1.38542,-3.81902 1.70443,-2.97136 4.52084,-2.97136 2.53386,0 3.21746,2.08724 z m -1.84115,4.48439 q 0.46484,-2.22397 0.21875,-3.65496 -0.23698,-1.4401 -1.81381,-1.4401 -1.44922,0 -2.40625,1.36719 -0.95703,1.35807 -1.52214,4.01042 -0.42838,1.9961 -0.25521,3.20834 0.26433,1.85026 1.85027,1.85026 1.27604,0 2.26953,-1.13021 1.00261,-1.13021 1.65886,-4.21094 z m 12.22268,-4.48439 q 0.53776,1.61329 -0.0638,4.42058 -0.56511,2.66147 -1.73178,4.40236 -1.67708,2.4974 -4.28386,2.4974 -2.35157,0 -3.0625,-2.04167 -0.59245,-1.70443 0.0182,-4.57553 0.46485,-2.22396 1.38542,-3.81902 1.70443,-2.97136 4.52085,-2.97136 2.53385,0 3.21745,2.08724 z m -1.84115,4.48439 q 0.46484,-2.22397 0.21875,-3.65496 -0.23698,-1.4401 -1.81381,-1.4401 -1.44922,0 -2.40625,1.36719 -0.95703,1.35807 -1.52214,4.01042 -0.42838,1.9961 -0.25521,3.20834 0.26433,1.85026 1.85027,1.85026 1.27604,0 2.26953,-1.13021 1.00261,-1.13021 1.65886,-4.21094 z m 5.40496,-6.90887 h 2.59766 l 1.44011,11.32033 6.22527,-11.32033 h 2.57032 l -2.84376,13.38935 h -1.72266 l 1.67709,-7.90236 q 0.082,-0.41016 0.30078,-1.35808 0.22786,-0.94791 0.45573,-2.03255 l -6.21616,11.29299 h -1.79557 l -1.44923,-11.29299 -0.0911,0.41016 q -0.10026,0.49218 -0.29167,1.5039 -0.19141,1.00261 -0.29167,1.47657 l -1.67708,7.90236 h -1.73178 z m 20.69926,0.90235 h 1.65886 l -0.58334,2.72526 h 1.5586 l -0.28255,1.33985 h -1.5586 l -1.35808,6.3711 q -0.10937,0.51042 0.20052,0.6836 0.17318,0.10026 0.6198,0.10026 0.11849,0 0.25521,0 0.13671,-0.009 0.32812,-0.0273 l -0.27344,1.29428 q -0.30078,0.082 -0.61979,0.11849 -0.3099,0.0365 -0.66537,0.0365 -1.14843,0 -1.4401,-0.58334 -0.28255,-0.59245 -0.082,-1.53125 l 1.3763,-6.46225 h -1.32162 l 0.28256,-1.33985 h 1.32161 z m 9.98961,7.44662 q 0.29167,-1.36719 0.0365,-2.22396 -0.41016,-1.34896 -2.10547,-1.34896 -1.50391,0 -2.4336,1.14844 -0.92058,1.14844 -1.26693,2.77084 -0.32813,1.5586 0.1276,2.59766 0.46485,1.03906 1.95053,1.03906 1.63151,0 2.4974,-1.23047 0.875,-1.23958 1.19401,-2.75261 z m 1.72266,-0.0456 q -0.5013,2.36068 -1.97787,3.90105 -1.47656,1.54037 -3.89193,1.54037 -2.01433,0 -2.90756,-1.35808 -0.89323,-1.36719 -0.41016,-3.66407 0.52865,-2.46094 2.08725,-3.91928 1.55859,-1.45833 3.66407,-1.45833 1.88672,0 2.91667,1.25781 1.03906,1.25782 0.51953,3.70053 z m 3.6823,-8.3034 h 1.57683 l -1.65886,7.77475 5.09506,-4.14714 h 2.09636 l -4.51173,3.65496 2.65235,6.10678 h -2.09636 l -2.00521,-4.92189 -1.64063,1.25782 -0.77474,3.66407 h -1.57683 z m 15.83208,5.15886 q 0.33724,0.73829 0.29167,1.72266 0.009,0.67448 -0.3099,2.15105 h -7.15496 q -0.27343,1.48568 0.19141,2.38802 0.47396,0.89323 1.85026,0.89323 1.28516,0 2.22397,-0.84765 0.54687,-0.49219 0.86588,-1.13933 h 1.61329 q -0.18229,0.53776 -0.6836,1.20313 -0.49219,0.65625 -1.02995,1.07552 -0.90234,0.72917 -2.0599,0.98438 -0.6289,0.14583 -1.3763,0.14583 -1.82292,0 -2.8073,-1.32161 -0.98438,-1.33074 -0.47396,-3.71876 0.50131,-2.35157 2.08725,-3.81902 1.58594,-1.46745 3.64584,-1.46745 1.03906,0 1.91406,0.49219 0.875,0.48307 1.21224,1.25781 z m -1.43099,2.57032 q 0.12761,-1.06641 -0.10026,-1.70443 -0.41927,-1.1849 -1.9961,-1.1849 -1.13021,0 -2.06901,0.82032 -0.9388,0.8112 -1.25782,2.06901 z m 4.57547,-4.10157 h 1.5586 l -0.29167,1.38542 q 0.875,-0.85677 1.72266,-1.23047 0.85677,-0.3737 1.80469,-0.3737 2.07813,0 2.4974,1.44922 0.23698,0.79297 -0.0729,2.26954 l -1.33073,6.26173 h -1.66797 l 1.30339,-6.15236 q 0.19141,-0.89323 0.0456,-1.4401 -0.24609,-0.91146 -1.39453,-0.91146 -0.58334,0 -0.98438,0.11849 -0.72005,0.20052 -1.35807,0.80208 -0.51042,0.48307 -0.7474,1.00261 -0.22787,0.51041 -0.42839,1.46745 l -1.08464,5.11329 h -1.64062 z m 9.93492,6.69923 q -0.10026,0.82032 0.14583,1.25782 0.44662,0.79297 1.97787,0.79297 0.91146,0 1.6862,-0.39193 0.78385,-0.40104 0.95703,-1.23047 0.13672,-0.62891 -0.35547,-0.95703 -0.30989,-0.20053 -1.30339,-0.46485 l -1.23047,-0.32813 q -1.18489,-0.30989 -1.69531,-0.6927 -0.92058,-0.66537 -0.66537,-1.84115 0.29167,-1.38542 1.46745,-2.2422 1.1849,-0.85677 2.8711,-0.85677 2.20574,0 2.90756,1.29428 0.4375,0.82031 0.21875,1.76823 h -1.54948 q 0.0729,-0.55599 -0.18229,-1.01172 -0.42839,-0.64714 -1.82292,-0.64714 -0.92969,0 -1.48568,0.35547 -0.54688,0.35547 -0.67448,0.9388 -0.13672,0.63803 0.41015,1.02084 0.31901,0.22786 0.99349,0.40104 l 1.02995,0.26432 q 1.67709,0.42839 2.19662,0.82943 0.82032,0.62891 0.52865,1.97787 -0.27344,1.30339 -1.46745,2.25131 -1.1849,0.94792 -3.20834,0.94792 -2.17839,0 -2.88021,-0.98438 -0.69271,-0.99349 -0.44662,-2.45183 z"
           id="path39" />
      </g>
      <path
         id="rect31"
         style="fill:none;stroke:#0c0c0c;stroke-width:0.707;stroke-miterlimit:3.4"
         d="m 21.33033,87.660545 h 176.25273 v 9.015432 H 21.33033 Z" />
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
